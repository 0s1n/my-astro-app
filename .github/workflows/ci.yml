name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

  # Permitir ejecución manual del workflow
  workflow_dispatch:

# Cancelar workflows redundantes automáticamente
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Job 1: Validar commits
  validate-commits:
    name: 📝 Validate Commits
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          # Necesario para commitlint: obtener historial completo
          fetch-depth: 0

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: ⚡ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 📝 Validate commit messages
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # Para PRs: validar commits desde la base branch
            pnpm dlx commitlint --from=${{ github.event.pull_request.base.sha }} --to=${{ github.event.pull_request.head.sha }} --verbose
          else
            # Para push: validar el último commit
            pnpm dlx commitlint --from=HEAD~1 --to=HEAD --verbose
          fi

  # Job 2: Linting y Code Quality (solo verificación - Husky ya corrigió localmente)
  lint-and-format:
    name: 🔍 Lint & Format Check
    runs-on: ubuntu-latest
    needs: validate-commits # Ejecutar después de validar commits

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: ⚡ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 Run ESLint (check only)
        run: pnpm run lint

      - name: 💅 Check Prettier formatting (check only)
        run: pnpm run format:check

  # Job 3: Build y Tests
  build-and-test:
    name: 🏗️ Build & Test
    runs-on: ubuntu-latest
    needs: lint-and-format # Ejecutar después del linting

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: ⚡ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build project
        run: pnpm run build

      - name: 🧪 Run tests (when available)
        run: |
          if pnpm run test --dry-run 2>/dev/null; then
            echo "🧪 Running tests..."
            pnpm run test
          else
            echo "⚠️ No tests found, skipping test step"
          fi

      - name: 📊 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 30

  # Job 4: Type Checking
  type-check:
    name: 🔍 Type Check
    runs-on: ubuntu-latest
    needs: lint-and-format # Ejecutar en paralelo con build después del linting

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: ⚡ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🌐 Generate Cloudflare Worker types
        run: pnpm run cf-typegen
        continue-on-error: true # No fallar si no hay configuración de CF

      - name: 🔍 TypeScript type check
        run: |
          # Verificar si hay archivos TypeScript para chequear
          if find . -name "*.ts" -o -name "*.tsx" -not -path "./node_modules/*" -not -path "./dist/*" | head -1 | grep -q .; then
            echo "🔍 Running TypeScript type check..."
            pnpm exec tsc --noEmit
          else
            echo "⚠️ No TypeScript files found, skipping type check"
          fi
